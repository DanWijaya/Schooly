// import { InputAdornment, withStyles, Button } from '@material-ui/core';
// import { RemoveRedEye } from '@material-ui/icons';
// import PropTypes from 'prop-types';
// import TextField from '@material-ui/core/TextField';

// const styles = theme => ({});

// class PasswordInput extends Component {
//   constructor(props) {
//     super(props);

//     this.state = {
//       passwordIsMasked: true,
//     };
//   }

//   togglePasswordMask = () => {
//     this.setState(prevState => ({
//       passwordIsMasked: !prevState.passwordIsMasked,
//     }));
//   };

//   render() {
//     const { classes } = this.props;
//     const { passwordIsMasked } = this.state;


//     return (
//       <TextField variant="outlined"
//         type={passwordIsMasked ? 'password' : 'text'}
//         {...this.props}
//         InputProps={{
//           endAdornment: (
//             <InputAdornment position="end">
//               <RemoveRedEye
//                 className={classes.eye}
//                 onClick={this.togglePasswordMask}
//               />
//             </InputAdornment>
//           ),
//         }}
//       />

//     );
//   }
// }

// class UserNameInput extends Component {
//   constructor(props) {
//     super(props);
  
//     this.state = {
//       usernameIsEmpty: true,
//     };
//   }

//     render() {

//       return (
//         <TextField type="username" variant="outlined"
//         {...this.props}
//         InputProps={{
//           endAdornment: ( 
//             <InputAdornment position="end">

//             </InputAdornment>
//           ),
//         }}
//       />
//       );
//     }
//   }

// UserNameInput.propTypes = {
//   classes: PropTypes.object.isRequired,
//   onChange: PropTypes.func.isRequired,
//   value: PropTypes.func.isRequired,
// };

// UserNameInput = withStyles(styles)(UserNameInput);

// PasswordInput.propTypes = {
//   classes: PropTypes.object.isRequired,
//   onChange: PropTypes.func.isRequired,
//   value: PropTypes.func.isRequired,
// };

// PasswordInput = withStyles(styles)(PasswordInput);


// class App extends Component {
//   constructor(props) {
//     super(props);

//     this.state = {
//       password: '',
//     };
//   }

//   onChange = event => {
//     const { name, value } = event.target;

//     this.setState({ [name]: value });
//   };

//   render() {
//     const { password } = this.state;
//     const {username} = this.state;

//     return (
//       <div className="App Container">
        
//         <img src={logo} alt="logo" className="schooly"/>
//         <br />

//         <UserNameInput 
//         className="Form1" 
//         name="username"
//         label="Email or username"
//         value={username}
//         onChange={this.onChange}/>

//         <PasswordInput
//           className="Form1"
//           label="Password"
//           name="password"
//           value={password}
//           onChange={this.onChange}/>
        
//         <Routes/>
//         </div>
//     );
//   }
// }